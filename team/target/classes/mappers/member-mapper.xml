<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.member">

	<!-- 회원가입 -->
  <insert id="memberInsert" parameterType="MemberDTO">

		insert into member (id,pw,name,nickname,phone,gender,birth)
		            values (#{id},#{pw},#{name},#{nickname},#{phone},#{gender},#{birth})
  </insert>
  
  <!-- 회원 정보 수정 -->
  <update id="memberUpdate" parameterType="MemberDTO">
    		update member set pw=#{pw},
                          name=#{name},
                          nickname=#{nickname},
                          phone=#{phone},
                          gender=#{gender},
                          birth=#{birth} 
		      where id=#{id} and pw=#{pw}
  </update>
  
  <!-- 회원 탈퇴 -->
  <delete id="memberDelete" parameterType="Map" >
  		delete from member where id=#{id} and pw=#{pw}	
  </delete>

  <!-- 회원 조회 -->
  <select id="memberSelectOne" parameterType="String" resultType="MemberDTO">
		select * from member where id=#{id}    
  </select>

  <!-- (관리자)회원 목록 조회 -->
  <select id="memberSelectList" resultType="MemberDTO">
		select * from member
  </select>
  
  <!-- (관리자)회원 활동 정지 -->
  <update id="memberDenied" parameterType="MemberDTO">
    		update member set denied=#{denied} where id=#{id}
  </update>
  
  
  <!-- 회원 총계 -->
	<select id="totalRec" resultType="Integer">
		SELECT count(*) totalRec from member 
	</select>
  
  
  <!-- 회원 목록 요청 페이지 -->
	<select id="list" resultType="MemberDTO">
		select t2.* 
			from (select row_number() over(order by name asc) as num,t1.* 
				    from member t1)t2 
		 where num between #{startRec} and #{endRec} 
	</select>
  
  
  <!-- 회원 검색 목록 -->
	<select id="flist" resultType="MemberDTO">
		select t2.*
		  from (select row_number() over (order by name asc) as num, t1.*
							from member t1
		<bind name="keyword" value="'%'+keyword+'%'"/>				  
		<choose>
			<!-- 아이디 -->
			<when test="searchType == 'I'.toString()">
				where id like #{keyword}
			</when>
			
			<!-- 이름 -->
			<otherwise>
				where nickname like #{keyword} 
			</otherwise>
		</choose>
			)t2 where num between #{startRecord} and #{endRecord} 
	</select>
  
  
  <!-- 회원 검색 총계 -->
	<select id="searchTotalRec" resultType="Integer">
		select count(*) totalRec
		  from (select row_number() over (order by name asc) as num, t1.*
							from member t1
		<bind name="keyword" value="'%'+keyword+'%'"/>				  
		<choose>
			<!-- 아이디 -->
			<when test="searchType == 'I'.toString()">
				where id like #{keyword}
			</when>
			
			<!-- 이름 -->
			<otherwise>
				where nickname like #{keyword} 
			</otherwise>
		</choose>
			)t2 
	</select>
  
</mapper>